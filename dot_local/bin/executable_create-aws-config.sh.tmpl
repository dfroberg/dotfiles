#!/bin/bash
echo "# Generated"

cat <<EOF
[profile localstack]
region = ap-northeast-1
output = json

[default]
region=us-east-1
output=json
cli_pager=

[sso-session default]
sso_start_url=https://consensys.awsapps.com/start
sso_region=us-east-1
sso_registration_scopes = sso:account:access

# Include statdard set

{{ onepasswordDocument "sgx3xioo74jyrv23csw6u3zqti" }}

# Team accounts and clusters

EOF
check_no_cluster_infra() {
    local dir=$1

    if [[ ! -d "$dir/cluster_infra" ]]; then
        #echo "Directory $dir does not contain a cluster_infra directory."
        return 0
    else
        #echo "Directory $dir contains a cluster_infra directory."
        return 1
    fi
}
REPOS=$(ls -1 -d $REPOROOT/terraform-aws-eks-cluster*)
for repo in $REPOS; do
  title=$(basename $repo)
  title=${title/terraform-aws-eks-cluster-/}
  # by checking that it does not have a cluster_infra directory
  if check_no_cluster_infra $repo;
  then
      continue
  fi
  if [[ $title == "test-dev" ]]; then
    continue
  fi
  if [[ $title == "eks-factory" ]]; then
    continue
  fi
  cd $repo >/dev/null;
  # check if vars exists
  if [[ -f cluster_infra/terraform.tfvars ]]; then

  eval $(cat cluster_infra/terraform.tfvars | sed -e 's/[[:space:]]*//g' -e '/^$/d' -e '/^#/d' -e '/\[/d' -e 's/^/TF_VAR_/')
  # echo $TF_VAR_account_id
  # echo $TF_VAR_region
cat <<EOF
[profile infura-$title-sso]
sso_session = default
sso_region=$TF_VAR_region
sso_account_id=$TF_VAR_account_id
sso_role_name=AdministratorAccess

[profile infura-$title-ro-sso]
sso_session = default
sso_region=$TF_VAR_region
sso_account_id=$TF_VAR_account_id
sso_role_name=ReadOnlyAccess

[profile infura-$title]
region=$TF_VAR_region
output=json
cli_pager=
credential_process=aws-vault exec infura-$title-sso --json --backend=pass

[profile infura-$title-ro]
region=$TF_VAR_region
output=json
cli_pager=
credential_process=aws-vault exec infura-$title-ro-sso --json --backend=pass

# Assumes the role of the deployer role in the account
[profile infura-$title-env0-deployer-role]
sso_start_url=https://consensys.awsapps.com/start
sso_region=us-east-1
source_profile=infura-$title
region=$TF_VAR_region
output=json
role_arn=arn:aws:iam::$TF_VAR_account_id:role/{{ onepasswordRead "op://private/deployer-role/password" }}
external_id={{ onepasswordRead "op://private/deployer-role-external-id/password" }}


EOF
  cd - >/dev/null;
  fi
done;

cat <<EOF

# BEGIN_AWS_SSO_CLI

# END_AWS_SSO_CLI
EOF
